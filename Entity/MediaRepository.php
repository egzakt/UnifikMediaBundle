<?php

namespace Flexy\MediaBundle\Entity;

use Flexy\SystemBundle\Lib\BaseEntityRepository;

/**
 * MediaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MediaRepository extends BaseEntityRepository
{
    /**
     * Get All Uploaded Media
     *
     * @return array|mixed
     */
    public function findAll()
    {
        $qb = $this->createQueryBuilder('m')
            ->where('m.hidden = false');

        return $this->processQuery($qb);
    }

    /**
     * Get Media by type
     *
     * @param $type
     * @return mixed
     */
    public function findByType($type)
    {
        $qb = $this->createQueryBuilder('m')
            ->andWhere('m.type = :type')
            ->andWhere('m.hidden = false')

            ->setParameter('type', $type);

        return $this->processQuery($qb);
    }

    /**
     * Find by folderId and Filters
     *
     * @param string $folderId
     * @param string $type
     * @param string $sort
     * @param string $text
     * @return mixed
     */
    public function findByFolderType($folderId = 'base', $type = 'any', $sort = 'newer', $text = '')
    {
        $qb = $this->createQueryBuilder('m');

        if('base' != $folderId) {
            $qb->where('m.folder = :folderId')
                ->setParameter('folderId', $folderId);

        } else {
            $qb->where('m.folder IS NULL');
        }

        if ('any' != $type) {
            $qb->andWhere('m.type = :type')
                ->setParameter('type', $type);
        }

        switch ($sort) {
            case 'newer':
                $qb->addOrderBy('m.createdAt', 'DESC');
                break;
            default:
                $qb->addOrderBy('m.createdAt', 'ASC');
        }

        $qb->andWhere('m.hidden = false');

        if ('' != trim($text)) {
            $qb->andWhere('m.name LIKE :text')
                ->setParameter('text', '%' . trim($text) . '%');
        }

        return $this->processQuery($qb);
    }
}
